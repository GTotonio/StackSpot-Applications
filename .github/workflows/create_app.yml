name: Create Application

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Nome do novo projeto'
        required: true
      project_type:
        description: 'Tipo de aplicação'
        required: true
        type: choice
        options:
          - Backend - Python
          - Frontend - Angular Shell
          - Frontend - Angular MFE

jobs:
  create:
    runs-on: ubuntu-latest
    steps:
      - name: Definir variáveis
        run: |
          WORKFLOW_VERSION=v1
          INPUT_PROJECT_NAME="${{ github.event.inputs.project_name }}"
          INPUT_PROJECT_TYPE="${{ github.event.inputs.project_type }}"

          echo "Nome do repositório: $INPUT_PROJECT_NAME"
          echo "Tipo do repositório: $INPUT_PROJECT_TYPE"
          
          PROJECT_TYPE="frontend"

          if [[ $INPUT_PROJECT_TYPE == *Python ]]; then
            PROJECT_TEMPLATE="StackSpot-Application-Python"
            PROJECT_TYPE="backend"
          elif [[ $INPUT_PROJECT_TYPE == *Angular\ Shell ]]; then
            PROJECT_TEMPLATE="StackSpot-Application-Angular-Shell"
          elif [[ $INPUT_PROJECT_TYPE == *Angular\ MFE ]]; then
            PROJECT_TEMPLATE="StackSpot-Application-Angular-MFE"
          else
            echo "Tipo do repositório inválido: $INPUT_PROJECT_TYPE"
            exit 1
          fi

          echo "WORKFLOW_VERSION=$WORKFLOW_VERSION" >> $GITHUB_ENV
          echo "INPUT_PROJECT_NAME=$INPUT_PROJECT_NAME" >> $GITHUB_ENV
          echo "INPUT_PROJECT_TYPE=$INPUT_PROJECT_TYPE" >> $GITHUB_ENV
          echo "PROJECT_TEMPLATE=$PROJECT_TEMPLATE" >> $GITHUB_ENV
          echo "PROJECT_TYPE=$PROJECT_TYPE" >> $GITHUB_ENV
          echo "PROJECT_NAME=gen-$WORKFLOW_VERSION-$PROJECT_TYPE-$INPUT_PROJECT_NAME" >> $GITHUB_ENV

      - name: Criar repositório via API
        run: |

          echo "Nome do repositório gerado: $PROJECT_NAME"

          curl -X POST \
            -H "Authorization: token ${{ secrets.TEMPLATE_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/user/repos \
            -d "{\"name\":\"$PROJECT_NAME\", \"private\":false}"

          echo "Repositório criado com sucesso."

      - name: Clonar template correspondente
        run: |

          echo "Clonando template $PROJECT_TEMPLATE para o novo repositório $PROJECT_NAME..."
          echo "token: ${{ secrets.TEMPLATE_TOKEN }}"

          USER=GTotonio
          
          git clone "https://$USER:${{ secrets.TEMPLATE_TOKEN }}@github.com/GTotonio/$PROJECT_TEMPLATE.git" temp

          echo "Clone efetuado. Criando arquivos iniciais..."
          
          cd temp
          git remote remove origin
          git remote add origin https://$USER:${{ secrets.TEMPLATE_TOKEN }}@github.com/GTotonio/$PROJECT_NAME.git
          git push -u origin main

          echo "Repositório criado com sucesso: https://github.com/$USER/$PROJECT_NAME.git"
